plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.runtime' version '1.12.5'
}

group 'de.colorscheme'
version '4.0-SNAPSHOT'

sourceCompatibility = '8'
targetCompatibility = '8'

ext {
    junitVersion = '5.11.0-M1'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
tasks.withType(org.gradle.jvm.tasks.Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

application {
    mainClass = 'de.colorscheme.main.Launcher'
    applicationName = 'ColorSchemeGenerator'
}

jar {
    manifest {
        attributes 'Main-Class': 'de.colorscheme.main.Launcher'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

javafx {
    /*version = '10'*/
    //version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

tasks.named('run', JavaExec) {
    standardInput = System.in
    standardOutput = System.out
    errorOutput = System.err
    ignoreExitValue = true
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
    implementation files("src/main/resources/jar/ColorLogger-v2_Java8.jar")
}

test {
    useJUnitPlatform()
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        noConsole = true
    }
    jpackage {
        // Uncomment and adjust the following line if your runtime task is configured to generate images for multiple platforms
        // targetPlatformName = "mac"

        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/logoFX.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Fenris']

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'ColorSchemeGenerator','--linux-shortcut']
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'ColorSchemeGenerator']
        }
    }
}
